/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'dyenigma' at '18-2-12 下午3:27' with Gradle 3.0
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/
// 所有子项目的通用配置
subprojects {

    apply plugin: 'java'
    apply plugin: 'idea'


    version = '1.0'

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    //定义版本号
    ext {
        springVersion = '4.3.14.RELEASE'
        hibernateVersion = '5.2.2.Final'
        springBootVersion = '1.5.9.RELEASE'
        lombokVersion = '1.16.20'
        mysqlVersion = '5.1.21'
        commonsLangsVersion = '3.4'
        guavaVersion = '22.0'
        commonsIOVersion = '2.6'
        shiroVersion = '1.3.2'
        calimeroVersion = '2.3'
        commonsCodecVersion = '1.11'
        commonsBeanUtilsVersion = '1.8.3'
        pageHelperVersion = '5.1.2'
        fastJsonVersion = '1.2.46'
        servletVersion = '4.0.0'
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
        mavenCentral()
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }

    configurations {
        // 所有需要忽略的包定义在此
//        all*.exclude group: 'commons-httpclient'
//        all*.exclude group: 'commons-logging'
//        all*.exclude group: 'commons-beanutils', module: 'commons-beanutils'
//        compile.exclude group: 'org.apache.logging.log4j'
//        compile.exclude group: 'log4j'
//        compile.exclude module: 'slf4j-log4j12'
    }

    dependencies {
        // 通用依赖
        compile(
                // 依赖maven中不存在的jar,或者使用下面的方式
                fileTree(dir: 'lib', include: '*.jar')
        )

        // 依赖maven中不存在的jar,或者使用上面的方式
        //ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
        //ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
        //ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')
        //compile jarTree

        // 测试依赖
        testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    }

    // 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    buildscript {
        repositories {
            //使用的仓库优先级
            maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
            mavenCentral()
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        }
    }
}